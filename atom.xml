<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>今天一点也不冷</title>
  
  <subtitle>海阔天空 J</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-06T03:59:35.776Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Secret Jk</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Laravel框架下使用Hashid对id进行加解密</title>
    <link href="http://yoursite.com/2017/07/06/Laravel%E6%A1%86%E6%9E%B6%E4%B8%8B%E4%BD%BF%E7%94%A8Hashid%E5%AF%B9id%E8%BF%9B%E8%A1%8C%E5%8A%A0%E8%A7%A3%E5%AF%86/"/>
    <id>http://yoursite.com/2017/07/06/Laravel框架下使用Hashid对id进行加解密/</id>
    <published>2017-07-06T05:39:04.000Z</published>
    <updated>2018-07-06T03:59:35.776Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.vueyun.com/imgall/Laravel-Hashids.jpg" alt="这里写图片描述"></p><a id="more"></a><hr><ul><li><p>laravel Hashid 整合了 Base62, Hashids, Optimus 等高性能编码算法，并提供了统一的、简单易用的调用接口</p></li><li><p>应用场景示例： 不希望对外暴露有规则的数据索引，比如用户 ID，商品ID，订单编号…防止被第三方直接遍历抓取资源</p></li><li><p>版本最低要求：php: &gt;=5.4.0</p></li></ul><ul><li>在laravel中安装hashids</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require torann/hashids</span><br></pre></td></tr></table></figure><ul><li>在config/app.php中的providers数组中添加</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&apos;providers&apos; =&gt; [</span><br><span class="line">   Torann\Hashids\HashidsServiceProvider::class,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>在config下生成hashids.php配置文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan vendor:publish --provider=&quot;Torann\Hashids\HashidsServiceProvider&quot;</span><br></pre></td></tr></table></figure><ul><li>修改hashids.php要加密的长度</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;length&apos; =&gt; 8,</span><br></pre></td></tr></table></figure><ul><li>Hashid使用加密</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dd(Hashids::encode(111));</span><br><span class="line"></span><br><span class="line">结果：LDdwjwb1</span><br></pre></td></tr></table></figure><ul><li>Hashid使用解密</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dd(Hashids::decode(&apos;LDdwjwb1&apos;);</span><br><span class="line"></span><br><span class="line">结果：array:1 [▼</span><br><span class="line">      0 =&gt; 111</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><ul><li>由于限制如果版本高的话可以引用这个</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/vinkla/laravel-hashids</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.vueyun.com/imgall/Laravel-Hashids.jpg&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Laravel" scheme="http://yoursite.com/categories/Laravel/"/>
    
    
  </entry>
  
  <entry>
    <title>Swoole创建基于HttpServer与基于WebSocket服务器</title>
    <link href="http://yoursite.com/2017/07/04/Swoole%E5%88%9B%E5%BB%BA%E5%9F%BA%E4%BA%8EHttpServer%E4%B8%8E%E5%9F%BA%E4%BA%8EWebSocket%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://yoursite.com/2017/07/04/Swoole创建基于HttpServer与基于WebSocket服务器/</id>
    <published>2017-07-04T05:39:04.000Z</published>
    <updated>2018-07-06T03:59:17.929Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>WebSocket服务器是建立在Http服务器之上的长连接服务器，客户端首先会发送一个Http的请求与服务器进行握手</p><a id="more"></a><p>握手成功后会触发onOpen事件，表示连接已就绪，onOpen函数中可以得到$request对象，包含了Http握手的相关信息，如GET参数、Cookie、Http头信息等。</p></li><li><p>启动HttpServer服务端</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$http = new swoole_http_server(&quot;0.0.0.0&quot;, 8888);</span><br><span class="line">$http-&gt;set([</span><br><span class="line">  &apos;enable_static_handler&apos;=&gt;true,</span><br><span class="line">  &apos;document_root&apos; =&gt; &apos;/home/wwwroot/default</span><br><span class="line">  /swool/demo/server/data&apos;</span><br><span class="line">  //设置终端执行保存的静态路径</span><br><span class="line">]);</span><br><span class="line">$http-&gt;on(&apos;request&apos;, function ($request, $response) &#123;</span><br><span class="line">   $response-&gt;end(&quot;&lt;h1&gt;Hello Swoole. #&quot;.rand(1000, 9999).&quot;&lt;/h1&gt;&quot;);</span><br><span class="line">&#125;);</span><br><span class="line">$http-&gt;start();</span><br><span class="line"> ?&gt;</span><br></pre></td></tr></table></figure><ul><li>测试连接<br><img src="https://img-blog.csdn.net/20180610153842135?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0ODI3MDQ4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></li></ul><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$server = new swoole_websocket_server(&quot;0.0.0.0&quot;, 9501);</span><br><span class="line">//$server-&gt;set([]); 可以设置一些参数</span><br><span class="line">//监听_websocket打开事件</span><br><span class="line">$server-&gt;on(&apos;open&apos;, &apos;onOpen&apos;);</span><br><span class="line">function onOpen($server,$request)&#123;</span><br><span class="line">   print_r(&quot;我是收到的客户端连接ID:&quot;.$request-&gt;fd);</span><br><span class="line">   //$fd 客户端连接的ID，如果指定的$fd对应的TCP连接并非websocket</span><br><span class="line">   客户端，将会发送失败https://wiki.swoole.com/wiki/page/399.html</span><br><span class="line">&#125;</span><br><span class="line">//监听ws的消息事件</span><br><span class="line">$server-&gt;on(&apos;message&apos;, function (swoole_websocket_server</span><br><span class="line"> $server, $frame) &#123;</span><br><span class="line">    echo &quot;receive from &#123;$frame-&gt;fd&#125;:&#123;$frame-&gt;data&#125;,</span><br><span class="line">    opcode:&#123;$frame-&gt;opcode&#125;,fin:&#123;$frame-&gt;finish&#125;\n&quot;;</span><br><span class="line">    //websocket客户端连接推送数据，长度最大不得超过2M。</span><br><span class="line">    $server-&gt;push($frame-&gt;fd, &quot;this is server&quot;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$server-&gt;on(&apos;close&apos;, function ($ser, $fd) &#123;</span><br><span class="line">    echo &quot;client &#123;$fd&#125; closed\n&quot;;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$server-&gt;start();</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdn.net/20180610154657712?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0ODI3MDQ4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br><img src="https://img-blog.csdn.net/20180610154706702?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0ODI3MDQ4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><hr><ul><li>WebSocket client 端</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,</span><br><span class="line">  initial-scale=1.0&quot;&gt;</span><br><span class="line">  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;h1&gt;websocket客户端测试&lt;/h1&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">         // 打开一个 web socket</span><br><span class="line">         var ws = new WebSocket(&quot;ws://47.94.166.123:9999/&quot;);</span><br><span class="line"></span><br><span class="line">         ws.onopen = function()</span><br><span class="line">         &#123;</span><br><span class="line">             // Web Socket 已连接上，使用 send方法发送数据</span><br><span class="line">              ws.send(&quot;发送数据&quot;);</span><br><span class="line">              console.log(&quot;数据发送中...&quot;);</span><br><span class="line">         &#125;;</span><br><span class="line">         ws.onmessage = function (evt)</span><br><span class="line">         &#123;</span><br><span class="line">             var received_msg = evt.data;</span><br><span class="line">             console.log(received_msg,2222);</span><br><span class="line">         &#125;;</span><br><span class="line">         ws.onclose = function()</span><br><span class="line">         &#123;</span><br><span class="line">            // 关闭 websocket</span><br><span class="line">            alert(&quot;连接已关闭...&quot;);</span><br><span class="line">         &#125;;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdn.net/20180610155254498?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0ODI3MDQ4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p><img src="https://img-blog.csdn.net/2018061015530920?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0ODI3MDQ4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">文档地址:https://wiki.swoole.com/wiki/page/479.html</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;WebSocket服务器是建立在Http服务器之上的长连接服务器，客户端首先会发送一个Http的请求与服务器进行握手&lt;/p&gt;
    
    </summary>
    
      <category term="Swoole学习笔记" scheme="http://yoursite.com/categories/Swoole%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>创建发布一个自己的 Composer/Packagist 包 (PHP)</title>
    <link href="http://yoursite.com/2017/07/04/%E5%88%9B%E5%BB%BA%E5%8F%91%E5%B8%83%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%20Packagist%20%E5%8C%85%20(PHP)/"/>
    <id>http://yoursite.com/2017/07/04/创建发布一个自己的 Packagist 包 (PHP)/</id>
    <published>2017-07-04T05:39:04.000Z</published>
    <updated>2018-07-06T03:54:15.415Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.vueyun.com/imgall/phpcomposer.png" alt="这里写图片描述"></p><ul><li>Composer是PHP的一个依赖管理工具，在Packagist上提交了一个自己开发的PHP组件，这样其他开发者就可以使用  Composer使用这个包了<a id="more"></a></li><li>Composer通常以“vendor/package” （厂商/包名）的方式来命名。这里我们为项目命名”bin/composer”。<!--more--></li><li>测试地址 <a href="https://packagist.org/packages/bin/composer#v1.0.0" target="_blank" rel="noopener">https://packagist.org/packages/bin/composer#v1.0.0</a></li><li>1.新建一个项目目录，创建一个composer.json文件，示例格式如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   &quot;name&quot;: &quot;bin/composer&quot;,</span><br><span class="line">   &quot;description&quot;: &quot;Testing and publishing composer packages&quot;,</span><br><span class="line">   &quot;keywords&quot;: [&quot;laravel&quot;,&quot;composer&quot;],</span><br><span class="line">   &quot;homepage&quot;: &quot;https://github.com/binbinmax/composer-packagist-test&quot;,</span><br><span class="line">   &quot;type&quot;: &quot;library&quot;,</span><br><span class="line">   &quot;license&quot;: &quot;MIT&quot;,</span><br><span class="line">   &quot;require&quot;: &#123;</span><br><span class="line">       &quot;php&quot;: &quot;^5.6.3 || ^7.0&quot;,</span><br><span class="line">       &quot;overtrue/wechat&quot;: &quot;3.2.5&quot;</span><br><span class="line">   &#125;,</span><br><span class="line">   &quot;autoload&quot;: &#123;</span><br><span class="line">     &quot;psr-4&quot;: &#123;</span><br><span class="line">       &quot;Composer\\Bin\\&quot;: &quot;src/&quot;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   &quot;minimum-stability&quot;: &quot;dev&quot;,</span><br><span class="line">   &quot;authors&quot;: [</span><br><span class="line">       &#123;</span><br><span class="line">         &quot;name&quot;: &quot;bin&quot;,</span><br><span class="line">         &quot;email&quot;: &quot;185910700@qq.com&quot;,</span><br><span class="line">         &quot;homepage&quot;: &quot;https://www.vueyun.com&quot;</span><br><span class="line">       &#125;</span><br><span class="line">   ],</span><br><span class="line">   &quot;repositories&quot;: &#123;</span><br><span class="line">       &quot;packagist&quot;: &#123;</span><br><span class="line">           &quot;type&quot;: &quot;composer&quot;,</span><br><span class="line">           &quot;url&quot;: &quot;https://packagist.phpcomposer.com&quot;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这个json格式的文件中包含组件的基本信息，这里还差自动加载的方式，要根据具体开发模式指定自动加载方式，这里</span><br><span class="line">require可以指定这个组件依赖的其他组件，composer都会自动解决依赖</span><br></pre></td></tr></table></figure><ul><li>2.把组件提交到Github上</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&quot;license&quot;: &quot;MIT&quot;,</span><br><span class="line"></span><br><span class="line">github 选择许可证</span><br><span class="line"></span><br><span class="line">这里选择的许可证是 MIT 许可证，只要用户在项目副本中包含了版权声明和许可声明</span><br></pre></td></tr></table></figure><ul><li><p>3.提交组件到Packagist之前需要先把代码提交到github上，在Packagist只需填写组件的github地址。</p></li><li><p>4.提交组件地址到Packagist/ (注册登录自己的Packagist账号)</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://packagist.org/</span><br></pre></td></tr></table></figure><p>-</p><p>目录结构<br><img src="http://img.blog.csdn.net/20180212115645720?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzQ4MjcwNDg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><ul><li>github地址</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/binbinmax/composer-packagist-test</span><br></pre></td></tr></table></figure><ul><li>packagist地址</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://packagist.org/packages/bin/composer</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.vueyun.com/imgall/phpcomposer.png&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Composer是PHP的一个依赖管理工具，在Packagist上提交了一个自己开发的PHP组件，这样其他开发者就可以使用  Composer使用这个包了
    
    </summary>
    
      <category term="composer" scheme="http://yoursite.com/categories/composer/"/>
    
    
  </entry>
  
</feed>
